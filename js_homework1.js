// 1) 'number' + 3 + 3
// Коли хоча б один доданок string, JS конвертує всі інші у string
// Тому результатом буде конкатенація доданків
// Відповідь: number33

// 2) null + 3
// JS в арифметичних операціях завжди намагається
// привести всі операнди до числа. null -> 0
// Відповідь: 3

// 3) 5 && "qwerty"
// Оператор "логічне І" поверне останнє значення, яке трактується як true
// 5 -> true (бо не 0); "qwerty" -> true (бо строка не пуста)
// Відповідь: qwerty

// 4) +'40' + +'2' + "hillel";
// Першими виконаються унарні оператори +'40' та +'2' ('40' -> 40; '2' -> 2)
// Другим виконається додавання перших двох доданків 40 + 2 = 42
// Третім виконається додавання 42 + "hillel" = 42hillel (конкатенація, бо "hillel" - стрінга)
// Відповідь: 42hillel

// 5) '10' - 5 === 6;
// Першим виконається віднімання, при цьому '10' буде приведене до числового типу.
// 10 - 5 = 5
// Другим виконається строге порівняння (значень і типів) 5 та 6
// Відповідь: false

// 6) true + false
// JS в арифметичних операціях завжди намагається
// привести всі операнди до числа. true -> 1 ; false -> 0
// 1 + 0 = 1
// Відповідь: 1

// 7) '4px' - 3
// Спочатку JS спробує привести всі операнди до числа.
// Оскільки '4px' не можна привести до числа, то відповід буде NaN (неможливо виконати таку операцію)
// Відповідь: NaN

// 8) '4' - 3
// Спочатку JS спробує привести всі операнди до числа. ('4' -> 4)
// Потім виконається віднімання 4 - 3
// Відповідь: 1

// 9) '6' + 3 ** 0;
// За пріоритетом спочатку буде виконане зведення у ступінь 3 ** 0 = 1
// Далі виконаєтсья додавання. Оскільки один з операндів строка, то виконається конкатенація.
// '6' + 1 = 61
// Відповідь: 61

// 10) 12 / '6'
// Спочатку JS спробує привести всі операнди до числа. ('6' -> 6)
// Потім виконається ділення 12 / 6 = 2
// Відповідь: 2

// 11) '10' + (5 === 6);
// Спочатку виконається операція строгого порівняння в дужках 5 === 6 -> false
// Далі виконаєтсья додавання. Оскільки один з операндів строка, то виконається конкатенація.
// '10' + false = 10false
// Відповідь: 10false

// 12) null == ''
// В операціях порівнянна null може дорівнювати лише null або undefined.
// Будь-яке інше порівняння з null повертає false
// Відповідь: false

// 13) 3 ** (9 / 3);
// Перша дія виконується в дужках: 9/3=3
// Друга дія(**) - зведення у ступінь 3**3=27
// Відповідь: 27


// 14) !!'false' == !!'true'
// Спочатку виконається подвійний унарний оператор логічного НЕ - ! для кожного операнда
// Оскільки обидві строки не пусті, то: '...' -> true; !'...' -> false; !!'...' - > true
// true == true -> true
// Відповідь: true

// 15) 0 || '0' && 1
// Пріоритет оператора && більше, ніж у ||. Всі значення приводяться до Boolean перед порівнянням.
// Тому '0' -> true (строка не пуста); '0' && 1 -> 1 (повертає останнє значення, що трактується як true)
// 0 || 1 -> 1 (повертає перше значення, яке трактується як true)
// Відповідь: 1

// 16) (+null == false) < 1;
// З найвищим пріоритетом буде виконано унарний оператор +, який приведе null до числа 0.
// Далі обчислюється вираз у дужках. Перед порівнянням всі значення приводяться до Boolean.
// 0 -> false; (false == false) -> true
// Наступним виконується арифметичне порівняння, перед яким всі операнди переводяться в число.
// true -> 1; 1 < 1 -> false
// Відповідь: false

// 17) false && true || true
// Пріоритет оператора && більше, ніж у ||. Тому false && true -> false
// false || true -> true
// Відповідь:  true

// 18) false && (false || true);
// Скобки змінюють пріоритет операторів. Спочатку виконається (false || true) -> true
// Далі виконається: false && true -> false
// Відповідь: false

// 19) (+null == false) < 1 ** 5;
// Спочатку унарний оператор + приводить null до числа: +null  -> 0; 
// Потім false приводиться до number: false -> 0
// (0 == 0) -> true
// Перед виконання оператора < всі операнди приводяться до чисел. true -> 1; 1 ** 5 = 1
// 1 < 1 -> false
// Відповідь: false


console.log('number' + 3 + 3);
console.log(null + 3);
console.log(5 && "qwerty");
console.log(40 + 2 + "hillel");
console.log('10' - 5 === 6);
console.log( true + false);
console.log('4px' - 3);
console.log('4' - 3);
console.log('6' + 3 ** 0);
console.log(12 / '6');
console.log('10' + (5 === 6));
console.log(null == '');
console.log(3 ** (9 / 3));
console.log(!!'false' == !!'true');
console.log(0 || '0' && 1);
console.log((+null == false) < 1);
console.log(false && true || true);
console.log(false && (false || true));
console.log((+null == false) < 1 ** 5);